// server/prisma/schema.prisma
datasource db {
  provider = "postgresql" // keep Postgres-compatible, but dev can use SQLite via env if needed
  url      = env("DATABASE_URL")
}

generator client {
  provider   = "prisma-client-js"
  engineType = "library" // Node-API engine (avoids system OpenSSL dependency)
}

enum Role { STUDENT TEACHER ADMIN }

model User {
  id         String      @id @default(cuid())
  name       String
  email      String      @unique
  password   String
  role       Role        @default(STUDENT)
  createdAt  DateTime    @default(now())
  submissions Submission[]
}

model Assignment {
  id          String   @id @default(cuid())
  title       String
  description String
  difficulty  String
  category    String
  examples    Json?
  constraints Json?
  testCases   Json?
  createdAt   DateTime @default(now())
  submissions Submission[]
}

model LiveClass {
  id        String   @id @default(cuid())
  title     String
  schedule  DateTime
  createdAt DateTime @default(now())
}

model Submission {
  id           String   @id @default(cuid())
  assignmentId String
  studentId    String
  code         String
  result       Json?
  createdAt    DateTime @default(now())

  assignment Assignment @relation(fields: [assignmentId], references: [id])
  student    User       @relation(fields: [studentId], references: [id])

  @@unique([assignmentId, studentId]) // one submission per assignment per student (adjust if needed)
}