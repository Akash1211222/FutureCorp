generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

model User {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  password    String
  role        Role     @default(STUDENT)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  submissions Submission[]

  @@map("users")
}

model Assignment {
  id          String   @id @default(cuid())
  title       String
  description String
  difficulty  String
  category    String
  examples    Json?
  constraints Json?
  testCases   Json?
  points      Int      @default(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  submissions Submission[]

  @@map("assignments")
}

model LiveClass {
  id          String   @id @default(cuid())
  title       String
  description String?
  schedule    DateTime
  duration    Int      @default(60)
  meetingUrl  String?
  status      String   @default("scheduled")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("live_classes")
}

model Submission {
  id           String     @id @default(cuid())
  assignmentId String
  studentId    String
  code         String
  result       Json?
  score        Int?
  status       String     @default("pending")
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  assignment Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
  student    User       @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@unique([assignmentId, studentId])
  @@map("submissions")
}